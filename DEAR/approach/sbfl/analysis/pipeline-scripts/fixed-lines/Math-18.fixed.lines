org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#932#                res[i] = x[i] / diff;
org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#958#                res[i] = diff * x[i];
org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#990#            final double[] bLoEnc = encode(boundaries[0]);
org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#991#            final double[] bHiEnc = encode(boundaries[1]);
org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#994#                if (x[i] < bLoEnc[i]) {
org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#997#                if (x[i] > bHiEnc[i]) {
