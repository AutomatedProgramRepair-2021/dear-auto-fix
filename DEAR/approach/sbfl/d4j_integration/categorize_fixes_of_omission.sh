#!/usr/bin/env bash
################################################################################
# This script prints out Latex macros for the numbers of faults
# with code deleted by the bugfix.
#
# Usage:
# ./categorize_fixed_of_omission.sh
#
# Requirements:
# - Bash 4+ needs to be installed
# - the environment variable FL_DATA_HOME needs to be set and must point to the data repo
#
################################################################################

#
# Print error message and exit
#
die() {
    echo $1
    exit 1
}
[ "$FL_DATA_HOME" != "" ] || die "FL_DATA_HOME is not set!"

shopt -s nullglob

echo "% The following macros were generated by $0"

nRealFaultsWhereSomeFaultyLinesAreDeletedByBugfix=$(egrep -l '#FIX_OF_OMISSION$' "$FL_DATA_HOME"/analysis/pipeline-scripts/fixed-lines/*-{?,??,???}.fixed.lines | wc -l)
echo "\\def\\nRealFaultsWhereSomeFaultyLinesAreDeletedByBugfix{$nRealFaultsWhereSomeFaultyLinesAreDeletedByBugfix\\xspace}"

nRealFaultsWhereAllFaultyLinesAreDeletedByBugfix=$(egrep -vL '#FIX_OF_OMISSION$' "$FL_DATA_HOME"/analysis/pipeline-scripts/fixed-lines/*-{?,??,???}.fixed.lines | wc -l)
echo '\newcounter{nRealFaultsWhereAllFaultyLinesAreDeletedByBugfix}'
echo "\\setcounter{nRealFaultsWhereAllFaultyLinesAreDeletedByBugfix}{$nRealFaultsWhereAllFaultyLinesAreDeletedByBugfix}"
echo "\\def\\nRealFaultsWhereAllFaultyLinesAreDeletedByBugfix{\arabic{nRealFaultsWhereAllFaultyLinesAreDeletedByBugfix}\\xspace}"
