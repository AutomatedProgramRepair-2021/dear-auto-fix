#!/bin/bash


echo "%% These macros were automatically generated by ${BASH_SOURCE[0]} ."

shopt -s nullglob # otherwise we get an error referring to "$D4J_HOME"/.../{Chart,...}/patches/{???,...}... because there's no Chart-{3digit}

REAL_NONMOCKITO_PATCHES=("$D4J_HOME"/framework/projects/{Math,Time,Chart,Lang,Closure}/patches/{?,??,???}.src.patch)
nRealFaultsThatAreNotPureDeletions=$(
  for patch in "${REAL_NONMOCKITO_PATCHES[@]}"; do
    if [ "$(grep '^\-' $patch | wc -l)" -gt 1 ]; then
      echo $patch
    fi
  done | wc -l)
echo '\def\nRealFaultsThatAreNotPureDeletions{'"$nRealFaultsThatAreNotPureDeletions"'\xspace}'


nRealFaultsWithCompilableMutantsInFixedStatements=$(cut -d , -f 1-2 "$D4J_HOME"/framework/projects/{Math,Chart,Lang,Time,Closure}/mutants_in_scope.csv | uniq | wc -l)
nMutantsInFixedStatements=4834 # TODO: gotten by counting the #lines of 'inscope.txt' intermediate file for 'd4j_integration/get_killable_mutants_in_scope.sh' for all faults
echo '\def\nRealFaultsWithCompilableMutantsInFixedStatements{'"$nRealFaultsWithCompilableMutantsInFixedStatements"'\xspace}'
echo '\def\nMutantsInFixedStatements{'"$nMutantsInFixedStatements"'\xspace}'


sum() {
  python -c 'import sys; print(sum(int(line) for line in sys.stdin))'
}
for P in Chart Math Time Lang Closure; do
  for f in /home/spencer/fl/defects4j/framework/projects/$P/trigger_tests/????*; do
    [ "$(wc -l <$f)" -gt 1 ] && (! egrep -q '^-+[^:]*$' $f) && basename $f;
  done > /tmp/detectedArtificialFaults_$$_$P
  python -c "import csv; rf_by_af = {af:rf for p,rf,af in csv.reader(open('$D4J_HOME/framework/projects/$P/mutants_in_scope.csv'))}; afs = set(line.strip() for line in open('/tmp/detectedArtificialFaults_$$_$P')); rfs = set(rf_by_af[af] for af in afs); print(len(rfs))"
done > /tmp/nRealFaultsWithDetectedArtificialFaults_$$
nDetectedArtificialFaults=$(cat /tmp/detectedArtificialFaults_$$_* | wc -l)
nRealFaultsWithDetectedArtificialFaults=$(cat /tmp/nRealFaultsWithDetectedArtificialFaults_$$ | sum)
echo '\def\nDetectedArtificialFaults{'"$nDetectedArtificialFaults"'}'
echo '\def\nRealFaultsWithDetectedArtificialFaults{'"$nRealFaultsWithDetectedArtificialFaults"'}'

nRealFaultsThatDidNotTimeOutWithDetectedArtificialFaultsThatDidNotTimeOut=$(
  grep tarantula "$FL_DATA_HOME/data/scores_artificial_vs_real.csv" \
  | cut -d , -f 2 \
  | grep -v '[0-9][0-9][0-9][0-9]' \
  | wc -l)
nDetectedArtificialFaultsThatDidNotTimeOutForRealFaultsThatDidNotTimeOut=$(
  grep tarantula "$FL_DATA_HOME/data/scores_artificial_vs_real.csv" \
  | cut -d , -f 2 \
  | grep '[0-9][0-9][0-9][0-9]' \
  | wc -l)
echo '\def\nRealFaultsThatDidNotTimeOutWithDetectedArtificialFaultsThatDidNotTimeOut{'"$nRealFaultsThatDidNotTimeOutWithDetectedArtificialFaultsThatDidNotTimeOut"'}'
echo '\def\nDetectedArtificialFaultsThatDidNotTimeOutForRealFaultsThatDidNotTimeOut{'"$nDetectedArtificialFaultsThatDidNotTimeOutForRealFaultsThatDidNotTimeOut"'}'
